openapi: 3.0.3
info:
  title: Location Tracker API
  version: 1.0.0
  contact:
    name: Dimakatso
    email: dimakatsomm@icloud.com
servers:
  - url: /
    description: Self
  - url: http://localhost:5000
    description: local
tags:
  - name: auth
    description: User authentication service
  - name: locations
    description: User location service
paths:
  /auth/login:
    post:
      tags:
        - auth
      summary: User login
      description: User login using username/email and password
      operationId: loginUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CredentialsDto'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    default: true
                  data:
                    type: object
                    properties:
                      user:
                        $ref: '#/components/schemas/AppUser'
                      token:
                        type: string
                        format: jwt
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
        '500':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
  /auth/register:
    post:
      tags:
        - auth
      summary: User registration
      description: User registration using user details
      operationId: registerUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewUserDto'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessDto'
        '409':
          description: Conflicted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
        '500':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
  /auth/verify:
    get:
      tags:
        - auth
      summary: User verification
      description: User registration using user details
      operationId: verifyUser
      parameters:
        - in: query
          name: token
          schema:
            type: string
          description: The token to verify user
          required: true
      responses:
        '208':
          description: Already reported
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessDto'
        '302':
          description: Redirect
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
        '409':
          description: Conflicted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
        '500':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
  /auth/resend-verification:
    post:
      tags:
        - auth
      summary: User re-verification
      description: Resends user verification email
      operationId: resendVerification
      parameters:
        - in: query
          name: email
          schema:
            type: string
          description: The token to verify user
          required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessDto'
        '208':
          description: Already reported
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
        '500':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
  /locations:
    get:
      security:
        - bearerAuth: []
      tags:
        - locations
      summary: User location history
      description: User location history
      operationId: userLocationHistory
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Locations'
        '500':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
    post:
      security:
        - bearerAuth: []
      tags:
        - locations
      summary: Save user location
      description: Save user location
      operationId: saveUserLocation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCoordinatesDto'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
        '500':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
#components
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT   
  schemas:
    CredentialsDto:
      type: object
      properties:
        username:
          type: string
        emailAddress:
          type: string
          format: email
        password:
          type: string
          format: password
      required: [password]
    NewUserDto:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        username:
          type: string
        emailAddress:
          type: string
          format: email
        password:
          type: string
          format: password
      required: [firstName,lastName,username,emailAddress,password]
    AppUser:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        username:
          type: string
        emailAddress:
          type: string
          format: email
      required: [firstName,lastName,username,emailAddress]
    UserCoordinatesDto:
      type: object
      properties:
        lat:
          type: number
          format: float
        lon:
          type: number
          format: float
      required: [lat,lon]
    Location:
      type: object
      properties:
        latitude:
          type: number
          format: float
        longitude:
          type: number
          format: float
        country:
          type: string
        countryCode:
          type: string
          minLength: 2
          maxLength: 3
        city:
          type: string
        zipCode:
          type: string
        street:
          type: string
      required: [latitude,longitude,country,countryCode,city]
    Locations:
      type: array
      items:
        $ref: '#/components/schemas/Location'
    SuccessDto:
      type: object
      properties:
        status:
          type: boolean
          default: true
        data:
          type: object
          properties:
            message:
              type: string
    ErrorDto:
      type: object
      properties:
        status:
          type: boolean
          default: false
        data:
          type: object
          properties:
            message:
              type: string
            error:
              type: string
              